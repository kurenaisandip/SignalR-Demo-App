@page "/counter"
@using Microsoft.AspNetCore.SignalR.Client
@implements IAsyncDisposable

<PageTitle>Notification</PageTitle>

<h1>Here are the messages from the server</h1>

<ul>
    @foreach(var message in _messages)
    {
        <li>@message</li>
    }
</ul>


@code {
    private HubConnection? _hubConnection;
    private readonly List<string> _messages = new();
    private string _userId = "desktop"; 

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl("http://localhost:5221/notifications")
            .WithAutomaticReconnect()
            .Build();
        
        _hubConnection.On<string>("ReceiveNotification", message =>
        {
            _messages.Add(message);
            InvokeAsync(StateHasChanged); 
        });

        try
        {
            await _hubConnection.StartAsync();
            Console.WriteLine("Connected to SignalR Hub");
            
            if (!string.IsNullOrEmpty(_userId))
            {
                await _hubConnection.InvokeAsync("RegisterUserId", _userId);
                Console.WriteLine($"User ID {_userId} registered!");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error connecting to SignalR Hub: {ex.Message}");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection is not null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
}